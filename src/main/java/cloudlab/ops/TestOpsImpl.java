package cloudlab.ops;

import cloudlab.TestOpsProto.StringOpsGrpc.StringOps;
import cloudlab.TestOpsProto.StringReply;
import cloudlab.TestOpsProto.StringRequest;

import cloudlab.TestOpsProto.IntegerOpsGrpc.IntegerOps;
import cloudlab.TestOpsProto.IntegerReply;
import cloudlab.TestOpsProto.IntegerRequest;

import cloudlab.TestOpsProto.FloatOpsGrpc.FloatOps;
import cloudlab.TestOpsProto.FloatReply;
import cloudlab.TestOpsProto.FloatRequest;

import cloudlab.TestOpsProto.DoubleOpsGrpc.DoubleOps;
import cloudlab.TestOpsProto.DoubleReply;
import cloudlab.TestOpsProto.DoubleRequest;

import cloudlab.TestOpsProto.EvenOddOpsGrpc.EvenOddOps;
import cloudlab.TestOpsProto.EvenOddReply;
import cloudlab.TestOpsProto.EvenOddRequest;

import java.util.logging.Logger;

import io.grpc.stub.StreamObserver;

/**
 * This class implements the test service interface generated by gRPC using the
 * .proto file defined.
 */

public class TestOpsImpl implements StringOps, IntegerOps, FloatOps, DoubleOps, EvenOddOps {

	private static final Logger logger = Logger.getLogger(TestOpsImpl.class.getName());

	@Override
	public void call(StringRequest request, StreamObserver<StringReply> responseObserver) {
		StringReply reply = StringReply.newBuilder().setOutput("Hi " + request.getName() + "from " + request.getPlace())
				.build();
		responseObserver.onNext(reply);
		responseObserver.onCompleted();
	}

	@Override
	public void call(IntegerRequest request, StreamObserver<IntegerReply> responseObserver) {
		int sum = request.getFirstNumber() + request.getSecondNumber();

		IntegerReply reply = IntegerReply.newBuilder().setOutput("Sum is: " + sum).build();
		responseObserver.onNext(reply);
		responseObserver.onCompleted();
	}

	@Override
	public void call(FloatRequest request, StreamObserver<FloatReply> responseObserver) {
		float sum = request.getFirstNumber() + request.getSecondNumber();

		FloatReply reply = FloatReply.newBuilder().setOutput("Sum is: " + sum).build();
		responseObserver.onNext(reply);
		responseObserver.onCompleted();
	}

	@Override
	public void call(DoubleRequest request, StreamObserver<DoubleReply> responseObserver) {
		double sum = request.getFirstNumber() + request.getSecondNumber();

		DoubleReply reply = DoubleReply.newBuilder().setOutput("Sum is: " + sum).build();
		responseObserver.onNext(reply);
		responseObserver.onCompleted();

	}
	@Override
	public void call(EvenOddRequest request, StreamObserver<EvenOddReply> responseObserver) {

		boolean bool;
		
		if (request.getNumber() % 2 == 0)
			bool = true;
		else
			bool = false;
		
		EvenOddReply reply = EvenOddReply.newBuilder().setOutput(bool).build();
		responseObserver.onNext(reply);
		responseObserver.onCompleted();

	}
}
